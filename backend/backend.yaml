apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    io.kompose.service: backend-claim
  namespace: casino-website
  name: backend-claim
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
status: {}

---

apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose.yaml
    kompose.version: 1.28.0 (HEAD)
  labels:
    io.kompose.service: backend
  namespace: casino-website
  name: backend
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: backend
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yaml
        kompose.version: 1.28.0 (HEAD)
      labels:
        io.kompose.network/backend-default: "true"
        io.kompose.service: backend
    spec:
      containers:
        - envFrom:
            - configMapRef:
                name: development-env
          image: thibaultcne/casino:backend
          imagePullPolicy: IfNotPresent
          name: backend
          ports:
            - containerPort: 8000
          resources:
            limits:
              memory: 512Mi
              cpu: "1"
            requests:
              memory: 256Mi
              cpu: "0.2"
          volumeMounts:
            - mountPath: /app/images
              name: backend-claim
      restartPolicy: Always
      volumes:
        - name: backend-claim0
          persistentVolumeClaim:
            claimName: backend-claim0
status: {}

---

apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose.yaml
    kompose.version: 1.28.0 (HEAD)
  labels:
    io.kompose.service: backend
  namespace: casino-website
  name: backend
spec:
  ports:
    - name: "8000"
      port: 8000
      targetPort: 8000
  selector:
    io.kompose.service: backend
status:
  loadBalancer: {}

---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: backend-ingress
  namespace: casino-website
  annotations:
    kubernetes.io/ingress.class: traefik
    cert-manager.io/cluster-issuer: letsencrypt-prod
    traefik.ingress.kubernetes.io/router.middlewares: default-redirect-https@kubernetescrd
spec:
  rules:
    - host: backend.casino.thibault-cne.fr
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: backend
                port:
                  number: 8000
  tls:
    - secretName: backend-tls
      hosts:
        - backend.casino.thibault-cne.fr